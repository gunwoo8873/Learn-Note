package main

import "fmt"

////////////////////////////////////////////////////////////////////////////////
// 연속 메모리 [한번에 메모리 할당과 해제를 수행]
// Random Access에 강력
// 삽입 및 삭제에 비효율적 [배열의 시작과 끝에 데이터를 추가 혹은 삭제는 양호]
// Cache Miss가 발생 확률이 낮음
// 요소가 사라질 때마다 GC 되지 않는다
////////////////////////////////////////////////////////////////////////////////

func main() {
	var a [10]int = [10]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
	var b [11]int

	copy(b[0:], a[0:5]) // A의 배열에서 0부터 5까지 복사를 b의 배열로 복사
	b[5] = 100          // b의 5번째 인덱스에 100을 저장
	copy(b[6:], a[5:])  // A의 배열에서 5번째 부터 마지막의 인덱스를 b의 6번째 배열부터 인덱스를 복사

	fmt.Println(a)
	fmt.Println(b)
}
